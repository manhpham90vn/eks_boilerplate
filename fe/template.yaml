apiVersion: v1
kind: Namespace
metadata:
  name: front-end
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: boilerplate-configmap
  namespace: front-end
data:
  PORT: "8080"
  NODE_ENV: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boilerplate-deployment
  namespace: front-end
  labels:
    app: boilerplate
    tier: fe
spec:
  template:
    metadata:
      name: boilerplate-pod
      namespace: front-end
      labels:
        app: boilerplate
        tier: fe
    spec:
      containers:
        - name: nginx-container
          image: manhpv151090/dockerize_expressjs:v2
          resources:
            limits:
              cpu: "0.5"
              memory: "1024Mi"
            requests:
              cpu: "0.25"
              memory: "512Mi"
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: boilerplate-configmap
                  key: PORT
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: boilerplate-configmap
                  key: NODE_ENV
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
  replicas: 4
  selector:
    matchLabels:
      app: boilerplate
      tier: fe
---
apiVersion: v1
kind: Service
metadata:
  name: boilerplate-service
  namespace: front-end
spec:
  selector:
    app: boilerplate
    tier: fe
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: front-end
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "20"
    alb.ingress.kubernetes.io/success-codes: "200,302"
    alb.ingress.kubernetes.io/load-balancer-name: "frontend-alb"
spec:
  ingressClassName: alb
  rules:
    - host: manhdev.click
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: boilerplate-service
                port:
                  number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: boilerplate-hpa
  namespace: front-end
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: boilerplate-deployment
  minReplicas: 4
  maxReplicas: 40
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70